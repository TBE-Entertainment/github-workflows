name: "Docker Build & Push"

description: "Build and push a docker container image to container registry"

inputs:
  container-registry:
    required: false
    description: "The container registry URL"
    default: 'ghcr.io'
  container-image-name:
    required: false
    description: "Custom container image name - repository name is used by default"
  container-tags:
    required: false
    description: "The container tags to add to the built image"
    default: ${{ github.run_id }}
  push:
    required: false
    description: "True to push the image to the registry after building"
    default: true
  project-subdirectory:
    required: false
    description: "The subdirectory to run the build from relative to the repository root"
    default: '.'
  token:
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry - ${{ inputs.container-registry }}
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ inputs.container-registry }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Set container image name
      id: image-name
      shell: bash
      run: |
        if [ "${INPUT_NAME}" = "" ]
        then
          IMAGE_NAME="${REPO_NAME}"
        else
          IMAGE_NAME="${REPO_NAME}/${INPUT_NAME}"
        fi
        echo "Setting image name to ${IMAGE_NAME}"
        echo ::set-output name=image-name::${IMAGE_NAME}  
      env:
        REPO_NAME: ${{ github.repository }}
        INPUT_NAME: ${{ inputs.container-image-name }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ inputs.container-registry }}/${{ steps.image-name.outputs.image-name }}
        tags: |
          ${{ inputs.container-tags }}
          type=ref,event=branch
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ${{ inputs.project-subdirectory }} 
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}